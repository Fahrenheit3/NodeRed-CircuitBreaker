[
    {
        "id": "684766f6b176af89",
        "type": "subflow",
        "name": "Subflow 7",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1020,
                "y": 80,
                "wires": [
                    {
                        "id": "68511cac815a3cd3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1070,
                "y": 200,
                "wires": [
                    {
                        "id": "373fac3af2b6fa87",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "cooldownTime",
                "type": "num",
                "value": "20"
            },
            {
                "name": "failThreshold",
                "type": "num",
                "value": "15"
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "outputLabels": [
            "Flow Controller",
            "Status Check"
        ],
        "icon": "node-red-contrib-queue-gate/queue.png"
    },
    {
        "id": "373fac3af2b6fa87",
        "type": "function",
        "z": "684766f6b176af89",
        "name": "calculate stats through flow variables",
        "func": "\nmsg.failPercentage = flow.get(\"failCounter\") * 100 / (flow.get(\"failCounter\") + flow.get(\"successCounter\"));\nflow.set(\"successCounter\", 0);\nflow.set(\"failCounter\", 0);\nlet msg1;\nlet msg2;\n\nif(flow.get(\"failThreshold\") <= msg.failPercentage){\n    msg.topic = \"control\";\n    msg.payload = \"close\";\n    msg[\"timeout\"] = flow.get(\"cooldownTime\");\n    msg1 = msg;\n} else {\n    msg.topic = \"control\";\n    msg.payload = flow.get(\"failCounter\");\n    msg2 = msg;\n}\n\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "0366e4dba1bbc8b2"
            ],
            []
        ]
    },
    {
        "id": "29327a84206f99a7",
        "type": "inject",
        "z": "684766f6b176af89",
        "name": "PERIODIC CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "failPercentage",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "56b259b5dbb88083"
            ]
        ]
    },
    {
        "id": "68511cac815a3cd3",
        "type": "function",
        "z": "684766f6b176af89",
        "name": "control gate",
        "func": "\n\n//if threshold is reached and timer is not set, close gate\n\n\n//if timer >limit open gate\n\nif(msg.payload === 1){\n    msg.payload = \"open\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0366e4dba1bbc8b2",
        "type": "mytimeout",
        "z": "684766f6b176af89",
        "name": "",
        "outtopic": "",
        "outsafe": "",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "30",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "68511cac815a3cd3"
            ],
            [
                "68511cac815a3cd3"
            ]
        ]
    },
    {
        "id": "56b259b5dbb88083",
        "type": "change",
        "z": "684766f6b176af89",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cooldownTime",
                "pt": "flow",
                "to": "cooldownTime",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "failThreshold",
                "pt": "flow",
                "to": "failThreshold",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "373fac3af2b6fa87"
            ]
        ]
    },
    {
        "id": "cd48aa9385503fc7",
        "type": "http request",
        "z": "d0ac6a57ffe6a2b7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1090,
        "y": 1060,
        "wires": [
            [
                "5b2457fbc49888e0"
            ]
        ]
    },
    {
        "id": "7e9ed23f047ea5ac",
        "type": "inject",
        "z": "d0ac6a57ffe6a2b7",
        "name": "cars on craigslist",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "http://vancouver.craigslist.org/search/sss?format=rss&query=cars",
        "payloadType": "str",
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "0d50e4c7a49c2f34"
            ]
        ]
    },
    {
        "id": "0d50e4c7a49c2f34",
        "type": "change",
        "z": "d0ac6a57ffe6a2b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1060,
        "wires": [
            [
                "23c0abdaf4aeeac2"
            ]
        ]
    },
    {
        "id": "5b2457fbc49888e0",
        "type": "function",
        "z": "d0ac6a57ffe6a2b7",
        "name": "counter of failures",
        "func": "\nif(msg.statusCode === 403){\n    if(flow.get(\"failCounter\")){\n        flow.set(\"failCounter\", flow.get(\"failCounter\") + 1)\n    } else {\n        flow.set(\"failCounter\", 1);\n    }\n} else {\n    if(flow.get(\"successCounter\")){\n        flow.set(\"successCounter\", flow.get(\"successCounter\") + 1);\n    } else {\n        flow.set(\"successCounter\", 1);\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "d765827ece6f2813",
        "type": "subflow:684766f6b176af89",
        "z": "d0ac6a57ffe6a2b7",
        "name": "",
        "env": [
            {
                "name": "cooldownTime",
                "value": "10",
                "type": "num"
            }
        ],
        "x": 500,
        "y": 1240,
        "wires": [
            [
                "23c0abdaf4aeeac2"
            ],
            []
        ]
    },
    {
        "id": "23c0abdaf4aeeac2",
        "type": "q-gate",
        "z": "d0ac6a57ffe6a2b7",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "100",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 850,
        "y": 1060,
        "wires": [
            [
                "cd48aa9385503fc7"
            ]
        ]
    }
]
