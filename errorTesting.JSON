[
    {
        "id": "6a18b14ac692588d",
        "type": "subflow",
        "name": "Subflow 10",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 460,
                "wires": [
                    {
                        "id": "0a43a581d998a447"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 80,
                "wires": [
                    {
                        "id": "8ca815e0b0c4fa49",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 180,
                "wires": [
                    {
                        "id": "017813ac4a6da350",
                        "port": 0
                    }
                ]
            },
            {
                "x": 680,
                "y": 320,
                "wires": [
                    {
                        "id": "017813ac4a6da350",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "cooldownTime",
                "type": "env",
                "value": "30"
            },
            {
                "name": "failThreshold",
                "type": "env",
                "value": "15"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "017813ac4a6da350",
        "type": "function",
        "z": "6a18b14ac692588d",
        "name": "calculate stats through flow variables",
        "func": "\nmsg.failPercentage = msg.failCounter * 100 / (msg.failCounter + msg.successCounter);\n\nlet msg1;\nlet msg2;\n\nif(flow.get(\"failThreshold\") <= msg.failPercentage){\n    msg.topic = \"control\";\n    msg.payload = \"close\";\n    msg[\"timeout\"] = flow.get(\"cooldownTime\");\n    msg1 = msg;\n} else {\n    msg.topic = \"control\";\n    msg.payload = \"open\";\n    msg2 = msg;\n}\n\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "ee4ef5792d719215"
            ],
            []
        ]
    },
    {
        "id": "8ca815e0b0c4fa49",
        "type": "function",
        "z": "6a18b14ac692588d",
        "name": "control gate",
        "func": "\n\n//if threshold is reached and timer is not set, close gate\n\n\n//if timer >limit open gate\n\nif(msg.payload === 1){\n    msg.payload = \"open\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ee4ef5792d719215",
        "type": "mytimeout",
        "z": "6a18b14ac692588d",
        "name": "",
        "outtopic": "",
        "outsafe": "",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "30",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "8ca815e0b0c4fa49"
            ],
            [
                "8ca815e0b0c4fa49"
            ]
        ]
    },
    {
        "id": "0a43a581d998a447",
        "type": "change",
        "z": "6a18b14ac692588d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cooldownTime",
                "pt": "flow",
                "to": "cooldownTime",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "failThreshold",
                "pt": "flow",
                "to": "failThreshold",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "017813ac4a6da350"
            ]
        ]
    },
    {
        "id": "a5d06bef1fad6138",
        "type": "http request",
        "z": "f26674e79407a245",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1070,
        "y": 600,
        "wires": [
            [
                "9dfc7125add15d6e"
            ]
        ]
    },
    {
        "id": "401403062a1c540b",
        "type": "inject",
        "z": "f26674e79407a245",
        "name": "cars on craigslist",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "http://vancouver.craigslist.org/search/sss?format=rss&query=cars",
        "payloadType": "str",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "bf4de27da5cc18e7"
            ]
        ]
    },
    {
        "id": "bf4de27da5cc18e7",
        "type": "change",
        "z": "f26674e79407a245",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "97b9187c37d48203"
            ]
        ]
    },
    {
        "id": "9dfc7125add15d6e",
        "type": "function",
        "z": "f26674e79407a245",
        "name": "counter of failures",
        "func": "\n/*if(typeof flow.get(\"successCounter\") === \"undefined\"){\n    flow.set(\"successCounter\", 0);\n}\n\nif(typeof flow.get(\"failCounter\") === \"undefined\"){\n    flow.set(\"failCounter\", 0);\n}*/\n\nif(msg.statusCode === 403){\n    if(flow.get(\"failCounter\")){\n        flow.set(\"failCounter\", flow.get(\"failCounter\") + 1)\n    } else {\n        flow.set(\"failCounter\", 1);\n    }\n} else {\n    if(flow.get(\"successCounter\")){\n        flow.set(\"successCounter\", flow.get(\"successCounter\") + 1);\n    } else {\n        flow.set(\"successCounter\", 1);\n    }\n}\n\nmsg.payload = flow.get(\"failCounter\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "0f70d42eeed45d53"
            ]
        ]
    },
    {
        "id": "97b9187c37d48203",
        "type": "q-gate",
        "z": "f26674e79407a245",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "100",
        "keepNewest": false,
        "qToggle": false,
        "persist": false,
        "storeName": "memory",
        "x": 690,
        "y": 680,
        "wires": [
            [
                "2d64e162ac762780"
            ]
        ]
    },
    {
        "id": "2b30a2f2cbaa599e",
        "type": "inject",
        "z": "f26674e79407a245",
        "name": "PERIODIC CHECK",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "failPercentage",
                "v": "",
                "vt": "num"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 940,
        "wires": [
            [
                "56d084adfd46da1e"
            ]
        ]
    },
    {
        "id": "da1e935fe9b0f698",
        "type": "debug",
        "z": "f26674e79407a245",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 820,
        "wires": []
    },
    {
        "id": "2d64e162ac762780",
        "type": "function",
        "z": "f26674e79407a245",
        "name": "",
        "func": "\nif(!msg.url){\n    return;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 660,
        "wires": [
            [
                "a5d06bef1fad6138"
            ]
        ]
    },
    {
        "id": "0f70d42eeed45d53",
        "type": "debug",
        "z": "f26674e79407a245",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 640,
        "wires": []
    },
    {
        "id": "775db1d7e7eb6351",
        "type": "subflow:6a18b14ac692588d",
        "z": "f26674e79407a245",
        "name": "",
        "env": [
            {
                "name": "cooldownTime",
                "value": "10",
                "type": "env"
            }
        ],
        "x": 190,
        "y": 720,
        "wires": [
            [
                "97b9187c37d48203"
            ],
            [
                "9bb2b93ae1440164"
            ],
            [
                "da1e935fe9b0f698",
                "97b9187c37d48203"
            ]
        ]
    },
    {
        "id": "56d084adfd46da1e",
        "type": "change",
        "z": "f26674e79407a245",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "successCounter",
                "pt": "msg",
                "to": "successCounter",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "failCounter",
                "pt": "msg",
                "to": "failCounter",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 840,
        "wires": [
            [
                "775db1d7e7eb6351"
            ]
        ]
    },
    {
        "id": "9bb2b93ae1440164",
        "type": "function",
        "z": "f26674e79407a245",
        "name": "",
        "func": "\nflow.set(\"successCounter\", 0);\nflow.set(\"failCounter\", 0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 740,
        "wires": [
            [
                "97b9187c37d48203"
            ]
        ]
    }
]
